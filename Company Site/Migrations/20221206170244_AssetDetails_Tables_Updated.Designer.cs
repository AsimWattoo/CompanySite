// <auto-generated />
using System;
using Company_Site.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Company_Site.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221206170244_AssetDetails_Tables_Updated")]
    partial class AssetDetails_Tables_Updated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Company_Site.Data.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("AcquisitonPrice")
                        .HasColumnType("float");

                    b.Property<DateTime>("AcquistionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Assignor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SRIssued")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BorrowerCode")
                        .IsUnique();

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Company_Site.Data.AccountDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Acquisition_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Capacity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Case_Exit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Case_Exit_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Company_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Constitution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DD_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DD_Firm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DD_Official")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfDefault")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupHead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Industry")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_Payment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MeasuresOfReconstruction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NPA_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Officers")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operating_Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plant_Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Products")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason_NPA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResolutionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResolutionStrategy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statutory_Dues")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrustCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountDetails");
                });

            modelBuilder.Entity("Company_Site.Data.AccountNetModel", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Advance")
                        .HasColumnType("float");

                    b.Property<double>("AmountPaid")
                        .HasColumnType("float");

                    b.Property<DateTime>("AppointmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Bench")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BillNumber")
                        .HasColumnType("float");

                    b.Property<double>("BilledAmount")
                        .HasColumnType("float");

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<string>("CNRNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CaseNumber")
                        .HasColumnType("int");

                    b.Property<string>("CaseTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ClaimAmount")
                        .HasColumnType("float");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactMobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Court")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CourtFees")
                        .HasColumnType("float");

                    b.Property<string>("CurrentStage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Development")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("FeePerHearing")
                        .HasColumnType("float");

                    b.Property<DateTime>("FilingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FinalOrder")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Firm")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Forum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JudgeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NextDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("OSAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Petitioner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PetitionerMultiLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RegistrationNumber")
                        .HasColumnType("int");

                    b.Property<string>("Respondent")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Respondent_adv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalFeesQuotation")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AccountNets");
                });

            modelBuilder.Entity("Company_Site.Data.ApprovalsAndMemoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Approval_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Committee")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApprovalsAndMemoModels");
                });

            modelBuilder.Entity("Company_Site.Data.AssetDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Area")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssetDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("BookValue")
                        .HasColumnType("bigint");

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<string>("Cersai_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Charge")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CouponRate")
                        .HasColumnType("float");

                    b.Property<string>("Custodian")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DP_ID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DP_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("East")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Encumbrance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaceValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Form")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FreeHold")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("HoldingPercentage")
                        .HasColumnType("float");

                    b.Property<string>("ISIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("InsuranceValue")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("LeasedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LegalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lessee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lessor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Listed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Locality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MortageDeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MortgageType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mortgagor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NDC_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("North")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Owner")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("PinCode")
                        .HasColumnType("bigint");

                    b.Property<string>("Possession")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RateOfHolding")
                        .HasColumnType("bigint");

                    b.Property<string>("SecurityTrustee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("South")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tenor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleDeed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfSecurity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("West")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AssetDetails");
                });

            modelBuilder.Entity("Company_Site.Data.AuctionDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("AuctionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<double>("BuyPrice")
                        .HasColumnType("float");

                    b.Property<int>("NumberOfBidder")
                        .HasColumnType("int");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("ReservePrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("AuctionDetails");
                });

            modelBuilder.Entity("Company_Site.Data.BorrowerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Aadhar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Additional_Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BorrowerCode")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("CIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NetWorthAsOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Net_Worth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NumberOfShares")
                        .HasColumnType("bigint");

                    b.Property<string>("PAN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PercentOfShareHeld")
                        .HasColumnType("float");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Wilful_Defaulter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WillFullAsOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("BorrowerDetails");
                });

            modelBuilder.Entity("Company_Site.Data.CashFlowProjectsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Facilty")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("amount")
                        .HasColumnType("bigint");

                    b.Property<string>("quarter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CashFlows");
                });

            modelBuilder.Entity("Company_Site.Data.ClaimsAndShareModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Admitted")
                        .HasColumnType("int");

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<int>("ClaimSubmitted")
                        .HasColumnType("int");

                    b.Property<string>("LenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Share")
                        .HasColumnType("float");

                    b.Property<double>("VotingShare")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ClaimsAndShares");
                });

            modelBuilder.Entity("Company_Site.Data.CollectionEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdjustToward")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Borrower")
                        .HasColumnType("int");

                    b.Property<string>("BorrowerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CollectionId")
                        .HasColumnType("int");

                    b.Property<double>("CreditAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreditDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Distribution_Id")
                        .HasColumnType("int");

                    b.Property<string>("KYC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoneSeller")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("NoneSellerShare")
                        .HasColumnType("float");

                    b.Property<bool>("Proportionately")
                        .HasColumnType("bit");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrustCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trust_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeOfRecovery")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("Company_Site.Data.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .HasColumnType("int");

                    b.Property<string>("CommentText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("Company_Site.Data.CompanyPolicy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PolicyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("Company_Site.Data.ContactAccessGrantModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccessGivenBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccessTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AccessGrants");
                });

            modelBuilder.Entity("Company_Site.Data.ContactAccountDetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Additional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IFSCI_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactAccountDetails");
                });

            modelBuilder.Entity("Company_Site.Data.ContactPaymentHistoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("AmountO_S")
                        .HasColumnType("float");

                    b.Property<double>("BillAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("BillDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("BillNo")
                        .HasColumnType("int");

                    b.Property<string>("ContactId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PaymentAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Service")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactPaymentHistories");
                });

            modelBuilder.Entity("Company_Site.Data.ContactsModel", b =>
                {
                    b.Property<string>("ContactId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Amount_OS")
                        .HasColumnType("bigint");

                    b.Property<long>("Bill_Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Bill_Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("Bill_Number")
                        .HasColumnType("bigint");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Company_Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Empanelled")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KYC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Landline_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Number_Assignment")
                        .HasColumnType("bigint");

                    b.Property<long>("Payment_Amount")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Payment_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Service1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Service2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("rating")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ContactId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Company_Site.Data.DebtProfileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountNumber")
                        .HasColumnType("int");

                    b.Property<double>("BaseInterestRate")
                        .HasColumnType("float");

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<string>("Calculation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EMI_Installment")
                        .HasColumnType("float");

                    b.Property<double>("EMI_OS")
                        .HasColumnType("float");

                    b.Property<string>("Facility")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NPA_Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("OS_Interest")
                        .HasColumnType("float");

                    b.Property<double>("POS")
                        .HasColumnType("float");

                    b.Property<DateTime>("POS_AsOn")
                        .HasColumnType("datetime2");

                    b.Property<double>("PenalAmount")
                        .HasColumnType("float");

                    b.Property<double>("PenalInterest")
                        .HasColumnType("float");

                    b.Property<double>("Res_BulletPayment")
                        .HasColumnType("float");

                    b.Property<double>("Res_DefaultInterest")
                        .HasColumnType("float");

                    b.Property<DateTime>("Res_EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Res_Facility")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Res_ImplementationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Res_Interest")
                        .HasColumnType("float");

                    b.Property<string>("Res_InterestCalculation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Res_InterestMonutorium")
                        .HasColumnType("float");

                    b.Property<double>("Res_InterestRate")
                        .HasColumnType("float");

                    b.Property<double>("Res_POS")
                        .HasColumnType("float");

                    b.Property<DateTime>("Res_POSAsOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Res_PrincipalFrequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Res_PrincipleMonutorium")
                        .HasColumnType("float");

                    b.Property<string>("Res_Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Res_TenorMonths")
                        .HasColumnType("int");

                    b.Property<string>("Res_Terms")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Res_Upfront")
                        .HasColumnType("float");

                    b.Property<double>("Spread")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TOS")
                        .HasColumnType("float");

                    b.Property<int>("Tenor")
                        .HasColumnType("int");

                    b.Property<string>("note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DebtProfiles");
                });

            modelBuilder.Entity("Company_Site.Data.DisburmentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdjustTowards")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Disburments");
                });

            modelBuilder.Entity("Company_Site.Data.DistributionEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Adjustment")
                        .HasColumnType("float");

                    b.Property<double>("Advance_TDS_Decimal")
                        .HasColumnType("float");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<double>("CFee")
                        .HasColumnType("float");

                    b.Property<double>("CLFV")
                        .HasColumnType("float");

                    b.Property<double>("ClosingBalance")
                        .HasColumnType("float");

                    b.Property<double>("Collections")
                        .HasColumnType("float");

                    b.Property<double>("Distribution_AMT")
                        .HasColumnType("float");

                    b.Property<double>("NormalDist")
                        .HasColumnType("float");

                    b.Property<double>("OPFV")
                        .HasColumnType("float");

                    b.Property<double>("Opening")
                        .HasColumnType("float");

                    b.Property<double>("OtherExpense")
                        .HasColumnType("float");

                    b.Property<double>("Provision")
                        .HasColumnType("float");

                    b.Property<double>("RFees")
                        .HasColumnType("float");

                    b.Property<int>("SRIssued")
                        .HasColumnType("int");

                    b.Property<int>("SROutStanding")
                        .HasColumnType("int");

                    b.Property<double>("Surplus")
                        .HasColumnType("float");

                    b.Property<double>("TDS_Decimal")
                        .HasColumnType("float");

                    b.Property<double>("TSFee")
                        .HasColumnType("float");

                    b.Property<string>("Trust_Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trust_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DistributionEnteries");
                });

            modelBuilder.Entity("Company_Site.Data.DocumentsListsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Doc_type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("Document_Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Execution_Place")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Original_Held_With")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Stamp_Duty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentLists");
                });

            modelBuilder.Entity("Company_Site.Data.DraftModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<string>("Draft")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SavedDrafts");
                });

            modelBuilder.Entity("Company_Site.Data.Employee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AadharCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExitDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoiningDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LandlineNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Company_Site.Data.EventTimelineModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Event")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReminderDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EventTimeLines");
                });

            modelBuilder.Entity("Company_Site.Data.ExpenseEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("BillAmount")
                        .HasColumnType("float");

                    b.Property<int>("Borrower_Code")
                        .HasColumnType("int");

                    b.Property<int?>("Distribution_Id")
                        .HasColumnType("int");

                    b.Property<double>("PaymentAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Proportionately")
                        .HasColumnType("bit");

                    b.Property<string>("Service")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrustCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Trust_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Vendor_Id")
                        .HasColumnType("int");

                    b.Property<string>("Vendor_Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Company_Site.Data.File", b =>
                {
                    b.Property<int>("FileId")
                        .HasColumnType("int");

                    b.Property<string>("MemoId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FileId");

                    b.ToTable("Files");
                });

            modelBuilder.Entity("Company_Site.Data.FinancialDataModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<long?>("Changes_in_inventries")
                        .HasColumnType("bigint");

                    b.Property<long?>("Depreciation_And_Amortisation_Expenses")
                        .HasColumnType("bigint");

                    b.Property<string>("EBDITA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EBDITA_per")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Employee_Benefit_Expenses")
                        .HasColumnType("bigint");

                    b.Property<long?>("Equity")
                        .HasColumnType("bigint");

                    b.Property<long?>("Exceptional_items")
                        .HasColumnType("bigint");

                    b.Property<long?>("Finance_Costs")
                        .HasColumnType("bigint");

                    b.Property<long?>("Fixed_Assets")
                        .HasColumnType("bigint");

                    b.Property<long?>("LTB")
                        .HasColumnType("bigint");

                    b.Property<string>("Networth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Operating_and_Direct_Expenses")
                        .HasColumnType("bigint");

                    b.Property<long?>("Other_Current_Liabilities")
                        .HasColumnType("bigint");

                    b.Property<long?>("Other_Expenses")
                        .HasColumnType("bigint");

                    b.Property<string>("Profit_Loss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Reserves")
                        .HasColumnType("bigint");

                    b.Property<long?>("Revenue")
                        .HasColumnType("bigint");

                    b.Property<long?>("STB")
                        .HasColumnType("bigint");

                    b.Property<long?>("Tax")
                        .HasColumnType("bigint");

                    b.Property<string>("Total_Assets")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Total_Current_Assets")
                        .HasColumnType("bigint");

                    b.Property<string>("Total_Expenses")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Total_Non_Current_Assets")
                        .HasColumnType("bigint");

                    b.Property<string>("Total_liabilities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FinancialDatas");
                });

            modelBuilder.Entity("Company_Site.Data.InterestRateChangeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("RevisedInterestRate")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("InterestRateChangeEntries");
                });

            modelBuilder.Entity("Company_Site.Data.Memo", b =>
                {
                    b.Property<string>("MemoNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Financial")
                        .HasColumnType("bit");

                    b.Property<string>("Frequency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FromId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<int>("MemoStatus")
                        .HasColumnType("int");

                    b.Property<string>("Periodicity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ThroughId")
                        .HasColumnType("int");

                    b.Property<int>("ToId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidTill")
                        .HasColumnType("datetime2");

                    b.Property<string>("Vendor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WriterId")
                        .HasColumnType("int");

                    b.HasKey("MemoNumber");

                    b.ToTable("Memos");
                });

            modelBuilder.Entity("Company_Site.Data.NcltNetModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Applicant_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Asset_Details")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<string>("CompaniesAct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPE")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LiquidationDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Liquidation_Value")
                        .HasColumnType("float");

                    b.Property<string>("PRA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Plan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("case_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("court")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("current_stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("insolvery_commencement_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("liquidator")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NcltNets");
                });

            modelBuilder.Entity("Company_Site.Data.NoticeAutomationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Forum")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notice")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoticeTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoticeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchSavedDraft")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NoticeAutomations");
                });

            modelBuilder.Entity("Company_Site.Data.RADetailsModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OurShare")
                        .HasColumnType("int");

                    b.Property<string>("PaymentTimeline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlanValue")
                        .HasColumnType("int");

                    b.Property<double>("Scoring")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("RADetails");
                });

            modelBuilder.Entity("Company_Site.Data.ResolutionStatusModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<string>("Case_Update")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Challenges")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Current_Progress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Important_information")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Next_steps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RBI_Reporting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rating_Reporting")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Recommended_Strategy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resolution_plan")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Restructuring_plan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ResolutionStatusModels");
                });

            modelBuilder.Entity("Company_Site.Data.TimelineModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Particulars")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Timelines");
                });

            modelBuilder.Entity("Company_Site.Data.Trust", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficiaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchNameAndAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CollectionFee")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Face_Value")
                        .HasColumnType("int");

                    b.Property<double>("HolderShare")
                        .HasColumnType("float");

                    b.Property<double>("HolderUpsideShare")
                        .HasColumnType("float");

                    b.Property<string>("IFSCCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterestMode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("InvestorShare")
                        .HasColumnType("float");

                    b.Property<double>("IssuerShare")
                        .HasColumnType("float");

                    b.Property<double>("IssuerUpsideShare")
                        .HasColumnType("float");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Modifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NavBand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PanCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Payable")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("R_Year1")
                        .HasColumnType("float");

                    b.Property<double>("R_Year2")
                        .HasColumnType("float");

                    b.Property<double>("R_Year3")
                        .HasColumnType("float");

                    b.Property<double>("R_Year4")
                        .HasColumnType("float");

                    b.Property<double>("R_Year5")
                        .HasColumnType("float");

                    b.Property<double>("R_Year6")
                        .HasColumnType("float");

                    b.Property<double>("R_Year7")
                        .HasColumnType("float");

                    b.Property<double>("R_Year8")
                        .HasColumnType("float");

                    b.Property<double>("R_Year9")
                        .HasColumnType("float");

                    b.Property<double>("ResolutionFee")
                        .HasColumnType("float");

                    b.Property<string>("ResolutionFeeBasis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SRHolder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SRInvestor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SRIssued")
                        .HasColumnType("int");

                    b.Property<string>("SRIssuer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SROs")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("T_Year1")
                        .HasColumnType("float");

                    b.Property<double>("T_Year2")
                        .HasColumnType("float");

                    b.Property<double>("T_Year3")
                        .HasColumnType("float");

                    b.Property<double>("T_Year4")
                        .HasColumnType("float");

                    b.Property<double>("T_Year5")
                        .HasColumnType("float");

                    b.Property<double>("T_Year6")
                        .HasColumnType("float");

                    b.Property<double>("T_Year7")
                        .HasColumnType("float");

                    b.Property<double>("T_Year8")
                        .HasColumnType("float");

                    b.Property<double>("T_Year9")
                        .HasColumnType("float");

                    b.Property<string>("TermsAndConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrustCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrustDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TrustSetupDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Trust_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrusteeshipBasis")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrusteeshipCollection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrusteeshipLimit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TrustCode")
                        .IsUnique();

                    b.ToTable("Trusts");
                });

            modelBuilder.Entity("Company_Site.Data.TrustRelationModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<string>("TrustCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TrustRelations");
                });

            modelBuilder.Entity("Company_Site.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Access")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfJoining")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("OfficeLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Company_Site.Data.UserAccess", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Page")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AccessList");
                });

            modelBuilder.Entity("Company_Site.Data.UserMemoReference", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("MemoId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MemoStatus")
                        .HasColumnType("int");

                    b.HasKey("Id", "MemoId", "UserId");

                    b.ToTable("MemoReferences");
                });

            modelBuilder.Entity("Company_Site.Data.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Company_Site.Data.ValuationDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BorrowerCode")
                        .HasColumnType("int");

                    b.Property<string>("DVS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FMV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Property")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RSV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Scrap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValuationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Valuer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ValuationDetails");
                });

            modelBuilder.Entity("Company_Site.Data.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Company_Site.Data.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Company_Site.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Company_Site.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Company_Site.Data.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Company_Site.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Company_Site.Data.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
