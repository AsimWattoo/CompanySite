@using Company_Site.Data
@using Company_Site.Enum
@typeparam T 
@typeparam T2

<div class="container-fluid mt-4 w-100">
	
	<Modal ShowModal=IsDeleteConfirmationVisible Title="Confirmation to delete record">
		<div class="my-2">
			<p>Are you sure you want to delete the record?</p>
		</div>
		<div class="d-flex justify-content-center my-2">
			<button type="button" class="btn btn-primary mx-1 w-50" @onclick=CancelDeleteConfirmation>Close</button>
			<button type="button" @onclick="DeleteRecord" class="btn btn-danger mx-1 w-50">Confirm</button>
		</div>
	</Modal>

	<!--Table Header-->
	@if (IsSearchable)
	{
		<EditForm Model="SearchModel" Context="searchBar">

			<div class="row d-flex align-items-center">
				<div class="col-xl-3 col-lg-4 col-md-5 col-sm-6 col-12 title d-flex align-items-center normal-text">
					Show 
					<select id="enteriesSelection" class="select-box mx-1 w-20" @onchange="@RowsToShowChange">
						<option value="10">10</option>
						<option value="20">20</option>
						<option value="30">30</option>
						<option value="50">50</option>
					</select>
					enteries
				</div>
				<div class="col-xl-9 col-lg-8 col-md-7 col-sm-6 col-12 p-0 d-flex justify-content-end align-items-center">
					<div class="fs">
						<label for="searchBox" class="normal-text">Search</label>
						<input type="text" class="roundedTextBox normal-text" @bind-value="@SearchText"/>
						<a class="btn btn-outline-primary mx-1 btn-search normal-text" @onclick="SearchRecords"><i class="fa fa-search normal-text"></i></a>
						<a class="btn btn-outline-secondary mx-1 normal-text" @onclick="ClearSearch">Clear</a>
					</div>
				</div>
			</div>

		</EditForm>
	}

	<!--Table-->
	<div class="mt-3 table-wrapper">
		<table class="table" id="MyTable" cellpadding="10" cellspacing="0" width="100%">
			<tr class="border-bottom-1">
				@if (ShowSerialNumber)
				{
						<th scope="col" class="text-center">
							<div class="btn-sortable align-content-start row m-0">
								<p class="d-inline-block text-start col-8 m-0 normal-text">Serial Number</p>
							</div>
						</th>
				}
				@foreach (string header in Headers.Keys)
				{
					@if (!string.IsNullOrEmpty(header))
					{
								<th>
									<div class="btn-sortable align-content-start justify-content-start row m-0 normal-text" @onclick='(() => Sort(header))'>
										<p class="d-inline-block text-start col-8 m-0 normal-text">@header</p>
									</div>
								</th>
					}
					else
					{
								<th></th>
					}
				}
				@if (ViewHeader != null)
				{
						<th>
							<div class="btn-sortable align-content-start justify-content-start normal-text row m-0">
								<p class="d-inline-block text-start col-8 m-0 normal-text">@ViewHeader</p>
							</div>
						</th>
				}
			</tr>
			@foreach (T item in DisplayedItems)
			{
				<tr @onclick="@(() => OnRowClick?.Invoke(item))">
					@if (ShowSerialNumber)
					{
						<td class="text-start fs-5 normal-text">@SR</td>
					}
					@foreach (string header in Headers.Keys)
					{
						@if (CheckInput(header))
						{
							<td class="align-middle">
								<input class="form-control normal-text" 
									value="@(GetHeaderValue(header, item))" 
									@oninput="@(t => SetInputValue(header, t, item))"
								/>
							</td>
						}
						else
						{
							<td class="text-start normal-text fs-5">@(ValueCallback == null ? GetHeaderValue(header, item) : ValueCallback(header, item))</td>
						}
					}
					<td>
						@if (IsSaveable && OnSave != null)
						{
							<a @onclick='@(() => OnSave(item))' class="my-1 normal-text"><i class="fa fa-save btn btn-outline-primary"></i></a>
						}
						else
						{
							@if (IsViewable(item))
							{
								<a @onclick='@(() => ViewRecord(GetId(item)))' class="my-1 normal-text"><i class="fa fa-eye btn btn-outline-primary"></i></a>
							}
							@if (IsEditable(item))
							{
								<a @onclick='@(() => EditRecord(GetId(item)))' class="my-1 normal-text"><i class="fa fa-edit btn btn-outline-primary"></i></a>
							}
							@if (IsDeleteable(item))
							{
								<a @onclick='@(() => DeleteRecordId(GetId(item)))' class="my-1 normal-text"><i class="fa fa-trash btn btn-outline-danger"></i></a>
							}
						}
					</td>
				</tr>
				@if (AreRowsCollapsible)
				{
					<tr>
						<td colspan="@Headers.Count + 4">
							<CollapsibleContainer Id="SR">
								<div style="height: 500px;"></div>
							</CollapsibleContainer>
						</td>
					</tr>
				}
				SR++;
			}
			@if (ShowTotal && GetTotal != null)
			{
					<tr>
					@if (ShowSerialNumber)
					{
											<td class="text-start fs-5 normal-text">Total</td>
					}
					@foreach (string header in Headers.Keys)
					{
											<td class="text-start fs-5 normal-text">@(GetTotal(header))</td>
					}
					</tr>
			}
		</table>
	</div>
	<!--Table Footer-->
	<div class="row mt-2">
		<div class="col-4">
			@if (ShowPaging)
			{
				<p class="lead page-footer normal-text">Showing @(DisplayedItems.Count > 0 ? (_CurrentPage - 1) * SearchModel.RowsToShow + 1 : 0) to @(DisplayedItems.Count + ((_CurrentPage - 1) * SearchModel.RowsToShow)) out of @Items.Count enteries</p>
			}
		</div>
		<div class="col-8">
			<nav>
				<ul class="pagination d-flex justify-content-end">
					@if (ShowPaging)
					{
						<li class="page-item">
							<a class="page-link normal-text @(_CurrentPage == 1 ?  "disabled" : "")" @onclick='@(() => PreviousPage())' aria-label="Previous">
								<span class="normal-text">Previous</span>
							</a>
						</li>
						@foreach(int p in Pages)
						{
							<li class="page-item mouse-pointer"><a class="page-link normal-text" @onclick='@(() => ChangePage(p))'>@p</a></li>
						}
						<li class="page-item">
							<a class="page-link normal-text @(_CurrentPage == 1 ?  "disabled" : "")" @onclick='@(() => NextPage())' aria-label="Next">
								<span class="normal-text">Next</span>
							</a>
						</li>
					}
				</ul>
			</nav>
		</div>
	</div>
</div>
