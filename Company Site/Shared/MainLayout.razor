@using Company_Site.DB
@using Company_Site.Data
@using Company_Site.Enum
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inherits LayoutComponentBase
@inject AuthenticationStateProvider authStateProvider
@inject UserManager<User> userManager
@inject IDbContextFactory<ApplicationDbContext> dbContextFactory

<PageTitle>Company Site</PageTitle>

<CascadingValue Value="@IsLoggedIn" Name="IsLoggedIn">
    <CascadingValue Value="@IsAdmin" Name="IsAdmin">
        <CascadingValue Value="@Pages" Name="Pages">
            <CascadingValue Value="@UserId" Name="UserId">
                <div class="page container-fluid w-100">
                    @if(IsLoggedIn){
                        <div>
                            <div class="row">
                                <div class="col-xl-2 col-lg-3 col-md-4 col-sm-5 col-12 user-info p-2 d-flex justify-content-center">
                                    <div class="user-info-panel d-flex align-items-center">
                                        <div class="img d-flex justify-content-center me-2">
                                            <img src="./img/profile.jpg"/>
                                        </div>
                                        <div class="info">
                                            <p class="mb-0 fw-bold">Muhammad Asim</p>
                                            <p class="mb-0 color-gray">asimwattoo6@gmail.com</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="sidebar col-xl-2 col-lg-3 col-md-4 col-sm-5 col-12">
                                    <NavMenu />
                                </div>
                                <main>
                                    <article class="content px-4">
                                        @Body
                                    </article>
                                </main>
                            </div>
                        </div>
                    }
                    else
                    {
                         <main>
                            <article class="content px-4">
                                @Body
                            </article>
                        </main>   
                    }
                </div>
            </CascadingValue>
        </CascadingValue>
    </CascadingValue>
</CascadingValue>

@code{

    public bool IsLoggedIn { get; set; }

    public bool IsAdmin { get; set; }

    public List<UserPages> Pages { get; set; } = new List<UserPages>();

    public int? UserId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        AuthenticationState state = await authStateProvider.GetAuthenticationStateAsync();
        if (state.User.Identity.Name == null)
            IsLoggedIn = false;
        else
        {
            User user = null;

            using(ApplicationDbContext dbContext = dbContextFactory.CreateDbContext()){
                user = dbContext.Users.Where(user => user.UserName == state.User.Identity.Name).First();
                Pages = dbContext.AccessList.Where(func => func.UserId == user.Id).Select(func => func.Page).ToList();
                IsAdmin = dbContext.UserRoles.Where(role => role.UserId == user.Id).Count() > 0;
                UserId = user.Id;
            }
            IsLoggedIn = true;
        }
        base.OnInitialized();
    }
}